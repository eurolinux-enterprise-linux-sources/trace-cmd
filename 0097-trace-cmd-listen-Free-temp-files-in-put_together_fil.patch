From b72211fb30f605f7cc54ee066953fca8a4d7463e Mon Sep 17 00:00:00 2001
From: "Steven Rostedt (Red Hat)" <rostedt@goodmis.org>
Date: Mon, 12 Sep 2016 14:15:44 -0400
Subject: [PATCH 097/134] trace-cmd listen: Free temp files in
 put_together_file()

The temp files used in put_together_file() are only used within that
function. They need to be freed before leaving that function. Funny enough,
they are freed on failure. Since the same allocations must be freed on
failure as on success, have them use the same return path.

Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
---
 trace-listen.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/trace-listen.c b/trace-listen.c
index 71244cb40754..ee8639fc5e9c 100644
--- a/trace-listen.c
+++ b/trace-listen.c
@@ -617,6 +617,7 @@ static int put_together_file(int cpus, int ofd, const char *node,
 {
 	char **temp_files;
 	int cpu;
+	int ret = -ENOMEM;
 
 	/* Now put together the file */
 	temp_files = malloc(sizeof(*temp_files) * cpus);
@@ -626,19 +627,17 @@ static int put_together_file(int cpus, int ofd, const char *node,
 	for (cpu = 0; cpu < cpus; cpu++) {
 		temp_files[cpu] = get_temp_file(node, port, cpu);
 		if (!temp_files[cpu])
-			goto fail;
+			goto out;
 	}
 
 	tracecmd_attach_cpu_data_fd(ofd, cpus, temp_files);
-	free(temp_files);
-	return 0;
-
- fail:
+	ret = 0;
+ out:
 	for (cpu--; cpu >= 0; cpu--) {
 		put_temp_file(temp_files[cpu]);
 	}
 	free(temp_files);
-	return -ENOMEM;
+	return ret;
 }
 
 static int process_client(const char *node, const char *port, int fd)
-- 
2.5.5

